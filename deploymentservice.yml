
# MySQL Deployment
#test
#test

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "root" # Leave empty for no password, as per your properties
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
---
# MySQL Service
# MySQL Service

apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  labels:
    app: mysql
spec:
  type: NodePort
  ports:
    - port: 3306
      targetPort: 3306
      nodePort: 30006 # Choose a port in the valid NodePort range (usually 30000-32767)
  selector:
    app: mysql           

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tp-foyer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tp-foyer
  template:
    metadata:
      labels:
        app: tp-foyer
    spec:
      containers:
      - name: tp-foyer
        image: raniaaouadi/tp-foyer:1.0.0
        ports:
          - containerPort: 8089
        env:
          - name: SPRING_DATASOURCE_URL
            value: "jdbc:mysql://mysql:3306/tpfoyer_db?createDatabaseIfNotExist=true"
          - name: SPRING_DATASOURCE_USERNAME
            value: "root"
          - name: SPRING_DATASOURCE_PASSWORD
            value: "root"
          - name: SPRING_JPA_HIBERNATE_DDL_AUTO
            value: "update"
---
apiVersion: v1
kind: Service
metadata:
  name: tp-foyer
spec:
  type: ClusterIP  # Define the type of service for your application
  ports:
    - port: 8089
      targetPort: 8089
      protocol: TCP
  selector:
    app: tp-foyer  # Ensure this matches the label in your tp-foyer deployment
